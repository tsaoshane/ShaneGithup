apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-shane-deployment
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: shane-app
  template:
    metadata:
      labels:
        app: shane-app
    spec:
      containers:
      - name: my-shane-app
        image: bblacrrepo4321.azurecr.io/tsaoshane/shanegithup:#{Build.BuildId}#
        imagePullPolicy: Always
        ports:
        - containerPort: 6001       
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"      #0.1 cpu
          limits:
            memory: "500Mi"
            cpu: "200m"      #0.2 cpu
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-shane-declarative
spec:
  maxReplicas: 10 # define max replica count
  minReplicas: 3  # define min replica count
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: my-shane-deployment
  targetCPUUtilizationPercentage: 80 # target CPU utilization   
# service type ClusterIP       
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: shane-app
    k8s-app: shane-app
  name: shane-app
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 6001
  type: ClusterIP
  selector:
    app: shane-app

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: shane-ingress-agic
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/use-private-ip: "false"
    appgw.ingress.kubernetes.io/health-probe-hostname: "localhost"
    appgw.ingress.kubernetes.io/health-probe-port: "6001"
    appgw.ingress.kubernetes.io/health-probe-path: "/getDocker"
    appgw.ingress.kubernetes.io/backend-path-prefix: "/"
    #appgw.ingress.kubernetes.io/appgw-ssl-certificate: "ApplicationGatewayCertificate"
spec:
  rules:
  - http:
      paths:
      - path: /shane/*
        backend:
          service:
            name: shane-app
            port:
              number: 80
        pathType: Prefix  